import re
import json

from scrapy.selector import Selector
try:
    from scrapy.spider import Spider
except:
    from scrapy.spider import BaseSpider as Spider
from scrapy.utils.response import get_base_url
from scrapy.contrib.spiders import CrawlSpider, Rule
from scrapy.contrib.linkextractors.sgml import SgmlLinkExtractor as sle
from scrapy.contrib.linkextractors import LinkExtractor
from scrapy.http import Request
from babaSR.items import BabaSRItem

class BaiduStoreSpider(CrawlSpider):
    name = "babaSR"
    allowed_domains = ["store.baidu.com"]
    start_urls = [
        "http://store.baidu.com/sports/",
        # "http://store.baidu.com/parlor",
        # "http://store.baidu.com/sleep"
    ]
    # rules = [
    #     Rule(sle(allow=("/subject/\d+/?$")), callback='parse_2'),
    #     Rule(sle(allow=("/tag/[^/]+/?$", )), follow=True),
    #     Rule(sle(allow=("/tag/$", )), follow=True),
    # ]
    
    def parseContent(self,product):
        print 'product:',product
        name = product.xpath('h1[@class="product-title"]/text()')
        sites = product.xpath('//*/div[@class="product-detail"]')
        picture =[] 
        for site in sites: 
            pic=site.css('img').xpath('@src').extract()  
            picture.append(pic)
        content = product.xpath('//*/div[@class="product-intro"]').extract()
        price = 0.0
        paylink = None
        setting = None
        tag = None
        return (name,picture,content,price,paylink,setting,tag)

    def parse_item(self,response):
        hxs =Selector(response)
        item = response.meta['item']
        product = hxs.xpath('/html/body/div[@class="wrapper"]')
        # parseContent detail method
        parseTuple = self.parseContent(product)
        item['name'] = parseTuple[0].decode('utf-8')
        item['picture'] =parseTuple[1].decode('utf-8')
        item['content'] = parseTuple[2]
        item['price'] = parseTuple[3]
        item['paylink'] = parseTuple[4]
        item['setting'] = parseTuple[5]
        item['tag'] = parseTuple[6]
        #item['desc'] = parseTuple[7]
        #items.append(item)
        print "finalItem:",item
        return item
    
    # main parse method in Spider
    def parse(self, response):
        hxs = Selector(response)
        newurls = hxs.xpath('//a/@href').extract()
        validurls = [] 
        for url in newurls:   
            if 'http' not in url:
                url = 'http://store.baidu.com' + url
            validurls.append(url)
            print 'validurl:',url
                
        items = [] 
        items.extend([self.make_requests_from_url(url).replace(callback=self.parse) for url in validurls])  
        print 'items:',items

        sites = hxs.xpath('//*/div[@class="p-list"]/ul/li')
        print 'sites:',sites
        items = []  
        for site in sites:  
            item = BabaSRItem()
            item['title'] = site.xpath('a/h2/text()').extract()  
            item['link'] = site.xpath('a/@href').extract()  
            item['desc'] = site.xpath('a/p/text()').extract() 
            #item['desc'] = site.xpath('text()').extract()  
            items.append(item) 
            # iterate Request generator
            yield Request(item['link'],meta={'item':item},callback=self.parse_item)

        #return items   
